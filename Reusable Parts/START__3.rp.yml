Reusable Part:
  Name:               START_CSCSTP_SQL_Filter
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Filter"

  - FRA:
      Description:        "Filter"

  Source: |
    * ---------------------------------------------------------------------------------------------------
    * This is a view filter in framework VLF Demo.
    * It belongs to business object Customers.
    * Created 12th July 2018 by USERID with Material Design style controls.
    * In this usage diagram it is highlighted in GREEN:
    * Annotate Img=%partdir%VF_UM501_SearchSQL_Slide1.PNG width=1000 height=339
    * Note: If you can’t see the diagram, go to the Home tab, then move across into the Design area.
    *       Click on the bottom right image that has the hint “Toggle Annotation Enabled/Disabled state”.
    * https://www.lansa.com/img/casestudies/highliner-logo-home-colour.png
    
    
    * ---------------------------------------------------------------------------------------------------
    Begin_Com Role(*EXTENDS #VF_AC007O) Height(673) Width(289)
    * ================================================================================
    * Simple Field, Group and Condition Definitions
    * ================================================================================
    Group_By Name(#XG_SearchFields) Fields(#CCustomerNumber #CFirstName #CLastName #CStreet #CState)
    
    Def_List Name(#SearchFields) Fields(#XG_SearchFields) Type(*WORKING) Entrys(1)
    
    * ---------------------------------------------------------------------------------
    Define_Com Class(#Prim_panl) Name(#DataItemPanel) Parent(#COM_OWNER) Displayposition(1) Tabposition(1) Height(641) Left(4) Top(0) Width(281) Horizontalscroll(True) Verticalscroll(True) Tabstop(False) Layoutmanager(#FlowLayout1)
    Define_Com Class(#Prim_panl) Name(#ButtonPanel) Parent(#COM_OWNER) Displayposition(2) Tabposition(2) Left(4) Top(641) Width(281) Layoutmanager(#ButtonPanelAttachmenthManager) Height(32) Tabstop(False)
    Define_Com Class(#PRIM_ATLI) Name(#AttachDataItemPanel) Manage(#DataItemPanel) Parent(#MainPanelAttachmentManager) Attachment(Center) Marginright(4) Marginleft(4)
    Define_Com Class(#PRIM_ATLI) Name(#AttachButtonPanel) Manage(#ButtonPanel) Parent(#MainPanelAttachmentManager) Attachment(Bottom) Marginright(4) Marginleft(4)
    * ---------------------------------------------------------------------------------
    Define_Com Class(#Prim_atlm) Name(#ButtonPanelAttachmenthManager)
    Define_Com Class(#Prim_atli) Name(#ButtonPanelAttachmentSave) Parent(#ButtonPanelAttachmenthManager) Manage(#Search_Button) Attachment(Right) Marginright(4) Margintop(4) Marginbottom(4)
    Define_Com Class(#PRIM_ATLI) Name(#AttachItem1) Manage(#CLEAR_LIST) Parent(#ButtonPanelAttachmenthManager) Attachment(Left)
    
    * ---------------------------------------------------------------------------------
    Define_Com Class(#PRIM_FWLM) Name(#FlowLayout1) Direction(TopToBottom) Sizingrulehor(Maximize)
    
    * Define the flow layout manager entries for the fields and components that are on the data panel
    
    Define_Com Class(#PRIM_FWLI) Name(#FlowLayout1Item1) Manage(#CCustomerNumber) Parent(#FlowLayout1)
    Define_Com Class(#PRIM_FWLI) Name(#FlowLayout1Item2) Manage(#CFirstName) Parent(#FlowLayout1)
    Define_Com Class(#PRIM_FWLI) Name(#FlowLayout1Item3) Manage(#CLastName) Parent(#FlowLayout1)
    Define_Com Class(#PRIM_FWLI) Name(#FlowLayout1Item4) Manage(#CStreet) Parent(#FlowLayout1)
    Define_Com Class(#PRIM_FWLI) Name(#FlowLayout1Item5) Manage(#CState) Parent(#FlowLayout1)
    
    * ---------------------------------------------------------------------------------
    
    * Define the button and the check box
    
    Define_Com Class(#PRIM_md.RaisedButton) Name(#Search_Button) Parent(#ButtonPanel) Caption(*MTXTUF_SEARCHUSERS) Displayposition(1) Tabposition(1) Left(177) Top(4) Buttondefault(True) Height(24)
    
    Define_Com Class(#PRIM_MD.CheckBox) Name(#CLEAR_LIST) Caption(*MTXTUF_CLEAR_LIST) Parent(#ButtonPanel) Displayposition(2) Tabposition(2) Checkstate(Checked) Left(0) Top(0) Height(32)
    
    * ---------------------------------------------------------------------------------
    
    * Define the fields that are on the filter form
    
    Define_Com Class(#CCustomerNumber.EditField) Name(#CCustomerNumber) Parent(#DataItemPanel) Displayposition(1) Tabposition(1) Left(0) Captiontype(Caption) Height(48) Helperposition(None) Caption('Customer') Top(0) Width(281)
    Define_Com Class(#CFirstName.EditField) Name(#CFirstName) Parent(#DataItemPanel) Displayposition(2) Tabposition(2) Left(0) Captiontype(Caption) Height(48) Helperposition(None) Caption('First Name') Top(58) Width(281)
    Define_Com Class(#CLastName.EditField) Name(#CLastName) Parent(#DataItemPanel) Displayposition(3) Tabposition(3) Left(0) Captiontype(Caption) Height(48) Helperposition(None) Caption('Last Name') Top(116) Width(281)
    Define_Com Class(#CStreet.EditField) Name(#CStreet) Parent(#DataItemPanel) Displayposition(4) Tabposition(4) Left(0) Captiontype(Caption) Height(48) Helperposition(None) Caption('Address') Top(174) Width(281)
    Define_Com Class(#CState.EditField) Name(#CState) Parent(#DataItemPanel) Displayposition(5) Tabposition(5) Left(0) Captiontype(Caption) Height(48) Helperposition(None) Caption('State') Top(232) Width(281)
    
    * ---------------------------------------------------------------------------------
    
    * The list used to receive data from the file access Server Module
    
    Def_List Name(#InstanceList_Columns) Fields(#vFirstLast #CStreet #CCustomerNumber #CCity #CState #CZip #CPhone) Counter(#ListCount) Type(*WORKING) Entrys(*MAX)
    
    * ================================================================================
    * Routines
    * ================================================================================
    
    
    Mthroutine Name(uInitialize) Options(*REDEFINE)
    
    * Do any initialization defined in the ancestor
    
    #Com_Ancestor.uInitialize
    
    #COM_OWNER.avFilterLocation := LEFT /* This filter is on the left */
    #COM_OWNER.avAllowLocationChange := True /* Allow user to move filter */
    
    * <your initialize logic goes here>
    
    Endroutine
    
    
    Evtroutine Handling(#Search_Button.Click)
    #Com_Owner.uSelectData
    Endroutine
    
    
    Mthroutine Name(uSelectData)
    
    * Define the data service
    Define_Com Class(#START_CSCSTP_SQL_Filter_svrm.Search) Name(#Search)
    
    #avFrameworkManager.avClearMessages Requester(#com_self)
    
    * Save the current key values
    Inz_List Named(#SearchFields)
    
    * Go to busy state
    #COM_OWNER.avGotoBusyState Showbusytext('Searching') Animated(False)
    
    * Ask Server Module to get the data from the server
    #Search.ExecuteAsync Searchfields(#SearchFields) Instancelist_Columns(#InstanceList_Columns)
    
    
    Evtroutine Handling(#Search.Completed)
    
    If Cond(#CLEAR_LIST.CheckState *EQ Checked)
    #AVLISTMANAGER.ClearList
    Endif
    
    Selectlist Named(#InstanceList_Columns)
    
    * Add instance details to the instance list
    
    #AVLISTMANAGER.AddtoList Visualid1(#vFirstLast) Visualid2(#CStreet) Nkey1(#CCustomerNumber) Acolumn1(#CCity) Acolumn2(#CState) Acolumn3(#CZip) Ncolumn1(#CPhone)
    
    Endselect
    
    Clr_List Named(#InstanceList_Columns)
    
    * Restore the saved key values
    Get_Entry Number(1) From_List(#SearchFields)
    
    * Get any warning messages issued by the search
    #avFrameworkManager.avReceiveSystemMessageQueue Requester(#Com_Self)
    
    * Go back to display free state
    #com_Owner.avGotoFreeState
    
    Endroutine
    
    * Handle a failure
    Evtroutine Handling(#Search.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER )
    Endroutine
    
    Endroutine
    
    End_Com
