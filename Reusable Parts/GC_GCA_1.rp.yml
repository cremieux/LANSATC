Reusable Part:
  Name:               GC_GCAPPROVED_SCRUD_Handler
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Command Handler"

  - FRA:
      Description:        "Command Handler"

  Source: |
    * ---------------------------------------------------------------------------------------------------
    * This is a SCRUD command handler in framework "GRIFFIN Framework".
    * It belongs to business object "Portfolio Capital".
    * Created 10th October 2018 by USERID with Windows desktop style controls.
    * This diagram indicates how and where it is used:
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide2.PNG width=1000 height=563
    * Note: If you can’t see the diagram, go to the Home tab, then move across into the Design area.
    *       Click on the bottom right image that has the hint “Toggle Annotation Enabled/Disabled state”.
    * ---------------------------------------------------------------------------------------------------
    Begin_Com Role(*EXTENDS #vf_ac010O) Height(270) Width(500)
    
    Group_By Name(#XG_AccessKeys) Fields(#ApprovedCapitalID #PropertyID)
    
    Group_By Name(#XG_EditableDataItems) Fields(#ApprovedCapitalID #PropertyID #CapitalItem #CapitalItemDescription #CapitalBudgetAmount #CapitalApprovedAmount #CapitalApprovalNumber)
    
    Group_By Name(#XG_ReadOnlyDataItems) Fields(#STD_INT)
    
    Group_By Name(#XG_AllDataItems) Fields(#XG_EditableDataItems #XG_ReadOnlyDataItems)
    
    * ---------------------------------------------------------------------------------
    Def_List Name(#AllDataItems) Fields(#XG_AllDataItems) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#EditableDataItems) Fields(#XG_EditableDataItems) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#ReadOnlyDataItems) Fields(#XG_ReadOnlyDataItems) Type(*WORKING) Entrys(*MAX)
    Def_List Name(#AccessKeys) Fields(#XG_AccessKeys) Type(*WORKING) Entrys(1)
    Define_Com Class(#Prim_Boln) Name(#ServerModuleResult)
    
    * ---------------------------------------------------------------------------------
    Define_Com Class(#Prim_panl) Name(#DataItemPanel) Parent(#COM_OWNER) Displayposition(1) Tabposition(1) Height(238) Left(0) Top(0) Width(500) Horizontalscroll(True) Verticalscroll(True) Tabstop(False)
    Define_Com Class(#Prim_panl) Name(#ButtonPanel) Parent(#COM_OWNER) Displayposition(2) Tabposition(2) Left(0) Top(238) Width(500) Layoutmanager(#ButtonPanelAttachmenthManager) Height(32) Tabstop(False)
    Define_Com Class(#PRIM_ATLI) Name(#AttachDataItemPanel) Manage(#DataItemPanel) Parent(#MainPanelAttachmentManager) Attachment(Center)
    Define_Com Class(#PRIM_ATLI) Name(#AttachButtonPanel) Manage(#ButtonPanel) Parent(#MainPanelAttachmentManager) Attachment(Bottom)
    * ---------------------------------------------------------------------------------
    Define_Com Class(#Prim_atlm) Name(#ButtonPanelAttachmenthManager)
    Define_Com Class(#Prim_atli) Name(#ButtonPanelAttachmentSave) Parent(#ButtonPanelAttachmenthManager) Manage(#Save_Button) Attachment(Right) Marginright(4) Margintop(4) Marginbottom(4)
    Define_Com Class(#Prim_atli) Name(#ButtonPanelAttachmentDelete) Parent(#ButtonPanelAttachmenthManager) Manage(#Delete_Button) Attachment(Right) Marginright(4) Margintop(4) Marginbottom(4)
    Define_Com Class(#Prim_atli) Name(#ButtonPanelAttachmentAnother) Parent(#ButtonPanelAttachmenthManager) Manage(#Another_Button) Attachment(Right) Marginright(4) Margintop(4) Marginbottom(4)
    * ---------------------------------------------------------------------------------
    Define_Com Class(#Prim_phbn) Name(#Save_Button) Parent(#ButtonPanel) Caption(*MTXTUF_SAVE) Displayposition(1) Tabposition(1) Height(24) Left(416) Top(4) Buttondefault(True)
    Define_Com Class(#Prim_phbn) Name(#Delete_Button) Parent(#ButtonPanel) Caption(*MTXTUF_DELETE) Displayposition(2) Tabposition(2) Height(24) Left(332) Top(4)
    Define_Com Class(#Prim_phbn) Name(#Another_Button) Parent(#ButtonPanel) Caption(*MTXTUF_CREATEMORE) Displayposition(3) Tabposition(3) Height(24) Left(332) Top(4) Buttondefault(True) Width(100)
    * ---------------------------------------------------------------------------------
    Define_Com Class(#ApprovedCapitalID.Visual) Parent(#DataItemPanel) Displayposition(1) Labeltype(DESCRIPTION) Tabposition(1) Top(4) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#PropertyID.Visual) Parent(#DataItemPanel) Displayposition(2) Labeltype(DESCRIPTION) Tabposition(2) Top(28) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#CapitalItem.Visual) Parent(#DataItemPanel) Displayposition(3) Labeltype(DESCRIPTION) Tabposition(3) Top(52) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#CapitalItemDescription.Visual) Parent(#DataItemPanel) Displayposition(4) Labeltype(DESCRIPTION) Tabposition(4) Top(76) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#CapitalBudgetAmount.Visual) Parent(#DataItemPanel) Displayposition(5) Labeltype(DESCRIPTION) Tabposition(5) Top(100) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#CapitalApprovedAmount.Visual) Parent(#DataItemPanel) Displayposition(6) Labeltype(DESCRIPTION) Tabposition(6) Top(124) Left(4) Marginleft(150) Height(22) Width(400)
    Define_Com Class(#CapitalApprovalNumber.Visual) Parent(#DataItemPanel) Displayposition(7) Labeltype(DESCRIPTION) Tabposition(7) Top(148) Left(4) Marginleft(150) Height(22) Width(400)
    * ---------------------------------------------------------------------------------
    Mthroutine Name(uInitialize) Options(*REDEFINE)
    * Do the ancestor thing
    #COM_ANCESTOR.uInitialize
    * Track changes to visual controls
    #COM_SELF.avTrackControlChanges Incontainer(#COM_Self) Insertclearcontenticon(True)
    * Auto arrange items on the main data panel
    #COM_SELF.avStartAutoArrangingControls Onpanel(#DataItemPanel)
    * Initialize some visibility
    Set Com(#Save_Button #Delete_Button #Another_Button) Visible(False)
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(uTerminate) Options(*REDEFINE)
    * Stop tracking changes to visual controls
    #COM_SELF.avStopTrackingControlChanges
    * Stop auto arranging the data panel
    #Com_Self.avStopAutoArrangingControls
    * Do the ancestor thing
    #COM_ANCESTOR.uTerminate
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(uExecute) Options(*REDEFINE)
    * Do the ancestor thing
    #COM_ANCESTOR.uExecute Gotofreestate(#GotoFreeState) Switchcallerreference(#SwitchCallerReference)
    * Asynchronously start a LoadNew (new data) or Load (existing data) request
    If (#COM_OWNER.CheckForUnsavedChanges( False ))
    #COM_OWNER.avQueueAsyncOperation Operationid(Load + #COM_OWNER.avAlphaArg1)
    #GotoFreeState := False /* Don't go back to a free state until async operations complete */
    Endif
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(avExecuteAsyncOperation) Options(*REDEFINE)
    * Handle the requested async operation
    Case (#OperationID)
    When (= LoadNew) /* Create new Portfolio Capital            */
    #COM_OWNER.LoadNew Clearmessagesafterdelay(#ClearMessagesAfterDelay)
    When (= Load) /* Display/edit existing Portfolio Capital */
    #COM_OWNER.Load Clearmessagesafterdelay(#ClearMessagesAfterDelay)
    When (= SaveNew) /* Save new Portfolio Capital              */
    #COM_OWNER.SaveNew Clearmessagesafterdelay(#ClearMessagesAfterDelay)
    When (= Save) /* Save existing Portfolio Capital         */
    #COM_OWNER.Save Clearmessagesafterdelay(#ClearMessagesAfterDelay)
    When (= Delete) /* Delete Portfolio Capital                */
    #COM_OWNER.Delete Clearmessagesafterdelay(#ClearMessagesAfterDelay)
    Endcase
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(LoadNew) Access(*PRIVATE)
    Define_Map For(*OUTPUT) Class(#prim_Boln) Name(#ClearMessagesAfterDelay)
    Define_Com Class(#GC_GCAPPROVED_SCRUD_ServerModule.InitializeNewData) Name(#InitializeNewData)
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide8.PNG width=1000 height=339
    * Ask the server to initialize all fields to create a new data item
    #InitializeNewData.Execute Alldataitems(#AllDataItems)
    * Get those intial values into this program
    Get_Entry Number(1) From_List(#AllDataItems)
    * Set the buttons to their initial state
    Set Com(#Save_Button #Delete_Button #Another_Button) Visible(False)
    * Set the keys fields to be input capable
    Set Com(#ApprovedCapitalID #PropertyID) Readonly(False)
    #Save_Button.ComponentTag := SaveNew
    #DataItemPanel.Enabled := True
    * Scroll to the first control in the panel
    If_Ref Com(#DataItemPanel.ComponentControls<1>) Is_Not(*NULL)
    #DataItemPanel.VerticalScrollTo Control(#DataItemPanel.ComponentControls<1>) Scrollposition(Top)
    Endif
    * Handle a failure
    Evtroutine Handling(#InitializeNewData.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER #ServerModuleResult )
    Endroutine
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(Load) Access(*PRIVATE)
    Define_Map For(*OUTPUT) Class(#prim_Boln) Name(#ClearMessagesAfterDelay)
    Define_Com Class(#GC_GCAPPROVED_SCRUD_ServerModule.GetData) Name(#GetData)
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide5.PNG width=1000 height=339
    * Get the access keys from the associated instance and set them up to map to the server
    #ApprovedCapitalID := #Com_Self.avAssociatedInstance.avAKey1
    #PropertyID := #Com_Self.avAssociatedInstance.avAKey2
    Inz_List Named(#AccessKeys)
    * Ask the server to get details of that data item
    #GetData.Execute Accesskeys(#AccessKeys) Alldataitems(#AllDataItems) Servermoduleresult(#ServerModuleResult)
    * If found we are good to go
    If (#ServerModuleResult)
    #ClearMessagesAfterDelay := True
    Get_Entry Number(1) From_List(#AllDataItems)
    Set Com(#Save_Button #Another_Button) Visible(False)
    #Delete_Button.Visible := True
    #DataItemPanel.Enabled := True
    #Save_Button.ComponentTag := Save
    Else
    Change Field(#AllDataItems) To(*NULL)
    Set Com(#Save_Button #Delete_Button #Another_Button) Visible(False)
    #DataItemPanel.Enabled := False
    Endif
    * Set the keys fields to be non changeable
    Set Com(#ApprovedCapitalID #PropertyID) Readonly(True)
    * Handle a failure
    Evtroutine Handling(#GetData.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER #ServerModuleResult )
    Endroutine
    Endroutine
    
    * ------------------------------------------------------------------------------
    Mthroutine Name(avHandleTrackedControlChange) Options(*REDEFINE)
    #Save_Button.Visible := #DataItemPanel.Enabled
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(CheckClientSideValidation) Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#ForOperation)
    Define_Map For(*RESULT) Class(#Prim_Boln) Name(#AllValid)
    * Add client side validation logic here
    #AllValid := True
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(Save) Access(*PRIVATE)
    Define_Map For(*OUTPUT) Class(#prim_Boln) Name(#ClearMessagesAfterDelay)
    Define_Com Class(#GC_GCAPPROVED_SCRUD_ServerModule.PutData) Name(#PutData)
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide6.PNG width=1000 height=339
    * Ask the server save the editable data items
    Inz_List Named(#EditableDataItems)
    #PutData.Execute Editabledataitems(#EditableDataItems) Servermoduleresult(#ServerModuleResult)
    If (#ServerModuleResult)
    #ClearMessagesAfterDelay := True
    #AVLISTMANAGER.AddtoList Visualid1(#PropertyID) Visualid2(#CapitalApprovalNumber) Akey1(#ApprovedCapitalID) Akey2(#PropertyID) Acolumn1(#CapitalItem) Acolumn2(#CapitalItemDescription) Ncolumn1(#CapitalBudgetAmount) Ncolumn2(#CapitalApprovedAmount) Ncolumn3(#SpentCapitalAmount) Ncolumn4(#GCRemainingAmount)
    Set Com(#Save_Button) Visible(False)
    Endif
    * Handle a failure
    Evtroutine Handling(#PutData.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER #ServerModuleResult )
    Endroutine
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(SaveNew) Access(*PRIVATE)
    Define_Map For(*OUTPUT) Class(#prim_Boln) Name(#ClearMessagesAfterDelay)
    Define_Com Class(#GC_GCAPPROVED_SCRUD_ServerModule.PutData) Name(#PutData)
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide6.PNG width=1000 height=339
    * Ask the server save the editable data items
    Inz_List Named(#EditableDataItems)
    #PutData.Execute Editabledataitems(#EditableDataItems) Servermoduleresult(#ServerModuleResult)
    If (#ServerModuleResult)
    #ClearMessagesAfterDelay := True
    #AVLISTMANAGER.AddtoList Visualid1(#PropertyID) Visualid2(#CapitalApprovalNumber) Akey1(#ApprovedCapitalID) Akey2(#PropertyID) Acolumn1(#CapitalItem) Acolumn2(#CapitalItemDescription) Ncolumn1(#CapitalBudgetAmount) Ncolumn2(#CapitalApprovedAmount) Ncolumn3(#SpentCapitalAmount) Ncolumn4(#GCRemainingAmount)
    #Save_Button.Visible := False
    #Another_Button.Visible := True
    #DataItemPanel.Enabled := False
    Endif
    * Handle a failure
    Evtroutine Handling(#PutData.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER #ServerModuleResult )
    Endroutine
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(Delete) Access(*PRIVATE)
    Define_Map For(*OUTPUT) Class(#prim_Boln) Name(#ClearMessagesAfterDelay)
    Define_Com Class(#GC_GCAPPROVED_SCRUD_ServerModule.DeleteData) Name(#DeleteData)
    * Annotate Img=%partdir%VF_UM501_AutoScrud_Slide7.PNG width=1000 height=339
    * Get the access keys from the associated instance and set them up to map to the server
    #ApprovedCapitalID := #Com_Self.avAssociatedInstance.avAKey1
    #PropertyID := #Com_Self.avAssociatedInstance.avAKey2
    Inz_List Named(#AccessKeys)
    * Ask the server to delete the associated row
    #DeleteData.Execute Accesskeys(#AccessKeys) Servermoduleresult(#ServerModuleResult)
    * Handle a good result
    If (#ServerModuleResult)
    #ClearMessagesAfterDelay := True
    #AVLISTMANAGER.RemovefromList Dataitem(#Com_Self.avAssociatedInstance)
    Set Com(#Save_Button #Delete_Button) Visible(False)
    #DataItemPanel.Enabled := False
    Endif
    * Handle a failure
    Evtroutine Handling(#DeleteData.Failed) Handled(#Handled)
    #Handled := #AVFRAMEWORKMANAGER.avHandleServerError( #COM_OWNER #ServerModuleResult )
    Endroutine
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Evtroutine Handling(#Save_Button.Click)
    Define_Com Class(#Prim_Boln) Name(#ClientSideValid)
    If (#Save_Button.ComponentTag = Save)
    #ClientSideValid := #COM_OWNER.CheckClientSideValidation( Update )
    Else
    #ClientSideValid := #COM_OWNER.CheckClientSideValidation( Insert )
    Endif
    If (#ClientSideValid)
    #COM_OWNER.avQueueAsyncOperation Operationid(#Save_Button.ComponentTag) Busystatetext(*MTXTUF_Saving)
    Endif
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Evtroutine Handling(#Delete_Button.Click)
    If (#COM_OWNER.CheckClientSideValidation( Delete ))
    #COM_OWNER.avQueueAsyncOperation Operationid(Delete) Busystatetext(*MTXTUF_Delete)
    Endif
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Evtroutine Handling(#Another_Button.Click)
    #COM_OWNER.avQueueAsyncOperation Operationid(LoadNew) Busystatetext(*MTXTUF_Loading)
    Endroutine
    
    * ------------------------------------------------------------------------------
    * Indicate back to framework whether a close operation is currently allowed
    Mthroutine Name(uQueryCanClose) Options(*REDEFINE)
    #COM_OWNER.CheckForUnsavedChanges Timeoutinprogress(#TimeOutinProgress) Allowtoproceed(#Allow)
    Endroutine
    
    * --------------------------------------------------------------------------
    * Returns True (Go ahead) or False (there are changes AND the user wants to save them)
    Mthroutine Name(CheckForUnsavedChanges)
    Define_Map For(*INPUT) Class(#prim_boln) Name(#TimeOutinProgress)
    Define_Map For(*RESULT) Class(#prim_boln) Name(#AllowtoProceed)
    * If a save operation is pending and not timed out
    If (#Save_Button.Visible And #TimeOutinProgress.Not)
    #AllowtoProceed := (#SYS_WEB.Confirm( (*MTXTUF_MSG_0009.Substitute( (#ApprovedCapitalID + ":" + #PropertyID) )) ) = Cancel)
    Else
    #AllowtoProceed := True /* Default */
    Endif
    Endroutine
    
    End_Com
