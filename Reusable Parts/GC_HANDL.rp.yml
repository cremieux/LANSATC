Reusable Part:
  Name:               GC_HandleDashboard
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Dashboard"

  - FRA:
      Description:        "Dashboard"

  Source: |
    * ---------------------------------------------------------------------------------
    * This is the "Dashboard" command handler for framework GRIFFIN Framework
    * Created 7th October 2018 by USERID with Windows desktop style controls.
    * ---------------------------------------------------------------------------------
    Begin_Com Role(*EXTENDS #VF_AC010O) Height(681) Width(1113) Layoutmanager(#Layout)
    
    Define_Com Class(#PRIM_ATLI) Name(#AttachItem1) Manage(#Demonstration_BarChart) Parent(#MainPanelAttachmentManager) Attachment(Center) Marginleft(8) Marginright(8) Margintop(8) Marginbottom(8)
    
    Define_Com Class(#PRIM_TBLO) Name(#Layout)
    Define_Com Class(#PRIM_TBLO.Column) Name(#LayoutColumn1) Displayposition(1) Parent(#Layout) Units(Pixels) Width(250)
    Define_Com Class(#PRIM_TBLO.Column) Name(#LayoutColumn2) Displayposition(2) Parent(#Layout)
    Define_Com Class(#PRIM_TBLO.Row) Name(#LayoutRow1) Displayposition(1) Parent(#Layout)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem1) Column(#LayoutColumn2) Manage(#Demonstration_BarChart) Parent(#Layout) Row(#LayoutRow1)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem2) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#Label) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem3) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#GCTotalSquaeFootage) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down) Marginleft(10)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem4) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#GCWeightedSQ) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down) Marginleft(10)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem5) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#GCPortfolioAvailCal) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down) Marginleft(10)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem6) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#GCWeightedAverage) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down) Marginleft(10)
    Define_Com Class(#PRIM_TBLO.Item) Name(#LayoutItem7) Alignment(TopLeft) Column(#LayoutColumn1) Manage(#GCPortfolioAvailability) Parent(#Layout) Row(#LayoutRow1) Sizing(FitToWidth) Flow(Down) Marginleft(10)
    
    Define_Com Class(#DF_T71O_BarChart_Access) Name(#Demonstration_BarChart) Parent(#COM_OWNER) Tabstop(False) Height(681) Width(863) Displayposition(3) Left(250)
    Define_Com Class(#PRIM_MD.Label) Name(#Label) Caption('Occupancy Summary') Displayposition(1) Left(0) Parent(#COM_OWNER) Tabposition(2) Top(0) Width(250) Captionalignment(Center) Themedrawstyle('LightTitle')
    Define_Com Class(#GCPortfolioAvailability.EditField) Name(#GCPortfolioAvailability) Displayposition(7) Parent(#COM_OWNER) Tabposition(3) Top(236) Width(240) Appearance(None) Helperposition(None) Height(50) Readonly(True)
    Define_Com Class(#GCWeightedAverage.EditField) Name(#GCWeightedAverage) Displayposition(5) Parent(#COM_OWNER) Tabposition(4) Top(136) Width(240) Appearance(None) Helperposition(None) Height(50) Caption('Weighted Average Portfolio Occupancy') Captiontype(Caption) Readonly(True)
    Define_Com Class(#GCPortfolioAvailCal.EditField) Name(#GCPortfolioAvailCal) Displayposition(6) Parent(#COM_OWNER) Tabposition(5) Top(186) Width(240) Appearance(None) Helperposition(None) Height(50) Caption('Portfolio Availability Calculation') Captiontype(Caption) Readonly(True)
    Define_Com Class(#GCWeightedSQ.EditField) Name(#GCWeightedSQ) Displayposition(4) Parent(#COM_OWNER) Tabposition(6) Top(86) Width(240) Appearance(None) Helperposition(None) Height(50) Caption('Weighted Portfolio Square Footage') Captiontype(Caption) Readonly(True)
    Define_Com Class(#GCTotalSquaeFootage.EditField) Name(#GCTotalSquaeFootage) Displayposition(2) Parent(#COM_OWNER) Tabposition(7) Top(36) Width(240) Appearance(None) Helperposition(None) Height(50) Caption('Total Square Footage') Captiontype(Caption) Readonly(True)
    
    * ---------------------------------------------------------------------------------------
    
    * ---------------------------------------------------------------------------------------
    Define_Com Class(#prim_Timr) Name(#DashBoardRefreshTimer) Interval(15000) /* Refresh the dash board every 15 seconds for visual impact */
    
    * ---------------------------------------------------------------------------------------
    Mthroutine Name(uTerminate) Options(*REDEFINE)
    
    * Stop the refresh timer
    #DashBoardRefreshTimer.Stop
    
    * Clear the bar chart of all content and terminate it
    #Demonstration_BarChart.uClear Terminate(True)
    
    * Do the ancestor thing
    #COM_ANCESTOR.uTerminate
    
    Endroutine
    
    * ---------------------------------------------------------------------------------------
    Mthroutine Name(uExecute) Options(*REDEFINE)
    Define_Com Class(#GCTC_GCASSETS_SCRUD_ServerModule.GetStatistics) Name(#getAssetStats)
    * Do the ancestor thing
    #COM_ANCESTOR.uExecute Gotofreestate(#GotoFreeState) Switchcallerreference(#SwitchCallerReference)
    
    Group_By Name(#AssetStats) Fields(#GCTotalSquaeFootage #GCWeightedSQ #GCWeightedAverage #GCPortfolioAvailCal #GCPortfolioAvailability)
    #getAssetStats.Execute Assetstats(#AssetStats)
    
    * Update the dashboard display
    #COM_OWNER.avQueueAsyncOperation Operationid(UpdateDashBoard)
    
    * Let the async operation drop the busy state
    #GotoFreeState := False /* Don't go back to a free state until async operations complete */
    
    Endroutine
    
    * ---------------------------------------------------------------------------------------
    Mthroutine Name(uDeActivate) Options(*REDEFINE)
    
    * Do the ancestor thing
    #COM_ANCESTOR.uDeActivate
    
    * Stop the refresh timer
    #DashBoardRefreshTimer.Stop
    
    Endroutine
    
    * ---------------------------------------------------------------------------------------
    Mthroutine Name(uActivate) Options(*REDEFINE)
    
    * Do the ancestor thing
    #COM_ANCESTOR.uActivate
    
    * Stop the refresh timer
    #DashBoardRefreshTimer.Start
    
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Evtroutine Handling(#DashBoardRefreshTimer.Tick) /* Bar chart has loaded an can be used */
    
    #COM_OWNER.avQueueAsyncOperation Operationid(UpdateDashBoard)
    
    Endroutine
    
    * ---------------------------------------------------------------------------------
    Mthroutine Name(avExecuteAsyncOperation) Options(*REDEFINE)
    * Handle the requested async operation
    Case (#OperationID)
    When (= UpdateDashBoard)
    #COM_OWNER.UpdateDashBoardContent
    Endcase
    Endroutine
    
    * ---------------------------------------------------------------------------------------
    Mthroutine Name(UpdateDashBoardContent) Access(*PRIVATE)
    
    Define_Com Class(#Std_Int) Name(#SecondsNow)
    
    If (#Demonstration_BarChart.isInitialized.Not) /* If still waiting for the bar chart to load try again */
    
    * Try again in 30 milliseconds
    #COM_OWNER.avQueueAsyncOperation Operationid(UpdateDashBoard) Delay(30) Busystatetext("Loading dashboard data")
    
    * Otherwise clear and fresh the dashbaord content
    
    Else
    
    * Clear the bar chart of any existing content
    #Demonstration_BarChart.uClear Terminate(False)
    
    * Update the title bar with user and caption
    #COM_OWNER.avTitleBarCaption := *MTXTUF_MSG_0011.Substitute( #AVFRAMEWORKMANAGER.avVisibleUser #DATETIMEX.Now.AsDisplayString.substring( 1 19 ) )
    
    * Set the chart caption
    
    * Add updated content to the bar chart
    #Demonstration_BarChart.uShowTitle Text("Quarterly Occupancy") Fontsize(14)
    #Demonstration_BarChart.uSetLegend Text("2016 through 2018 (Quarterly)") Fontsize(8) Fontcolor("black")
    #Demonstration_BarChart.uSetBarStyles Fontsize(10) Fontcolor("blue") Backgroundcolor("blue") Opacity(0.8)
    
    * Add the example data to the bar chart
    #SecondsNow := *TIMEC.Substring( 5 2 ).AsNumber /* Make the data vary for visual effect */
    
    #Demonstration_BarChart.uAddBar Data(62 + #SecondsNow) Label("Q1/16")
    #Demonstration_BarChart.uAddBar Data(45 + #SecondsNow) Label("Q2/16")
    #Demonstration_BarChart.uAddBar Data(55 + #SecondsNow) Label("Q3/16")
    #Demonstration_BarChart.uAddBar Data(79 + #SecondsNow) Label("Q4/16")
    
    #Demonstration_BarChart.uAddBar Data(87 + #SecondsNow) Label("Q1/17")
    #Demonstration_BarChart.uAddBar Data(62 + #SecondsNow) Label("Q2/17")
    #Demonstration_BarChart.uAddBar Data(14 + #SecondsNow) Label("Q3/17")
    #Demonstration_BarChart.uAddBar Data(100 - (34 + #SecondsNow)) Label("Q4/17")
    
    #Demonstration_BarChart.uAddBar Data(98) Label("Q1/18")
    #Demonstration_BarChart.uAddBar Data(95) Label("Q2/18")
    #Demonstration_BarChart.uAddBar Data(93.5) Label("Q3/18")
    #Demonstration_BarChart.uAddBar Data(100) Label("Q4/18")
    
    
    * Refresh the display
    #Demonstration_BarChart.uRefresh
    
    Endif
    
    Endroutine
    
    End_Com
